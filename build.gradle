plugins {
    id 'java-library'
    id 'java'
    id ('io.qameta.allure') version '2.12.0'
}

allure {
    report {
        version.set("2.19.0")
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set("2.29.0")
            }
        }
    }
}

repositories {
    mavenCentral()
}

def aspectjWeaverVersion = "1.9.22",
    selenideVersion = "6.13.0",
    restAssuredVersion = "5.3.0",
    allureVersion = "2.21.0",
    junitVersion = "5.9.3",
    slf4jVersion = "2.0.7",
    ownerVersion = "1.0.4"




tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:$aspectjWeaverVersion",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.appium:java-client:8.3.0",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "commons-io:commons-io:2.18.0",
            "org.assertj:assertj-core:3.24.2"
    )
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat = "short"
        }
    }
}

task android_tests(type: Test) {
    useJUnitPlatform {
        includeTags("android")
    }
}
